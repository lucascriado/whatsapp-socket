DROP DATABASE users_api;

CREATE DATABASE users_api;

GRANT ALL PRIVILEGES ON users_api.* TO 'admin'@'localhost';
FLUSH PRIVILEGES;

USE users_api;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    uuid VARCHAR(36) NOT NULL UNIQUE, -- Adicionado UNIQUE para garantir unicidade do UUID
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    fullname VARCHAR(255) NOT NULL, -- Adicionado diretamente na definição da tabela
    email VARCHAR(255) NOT NULL UNIQUE, -- Adicionado UNIQUE para evitar duplicidade de e-mails
    grupo_id INT DEFAULT NULL -- Permitir NULL caso o grupo não seja obrigatório
);

CREATE TABLE auth_users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Relacionado à tabela users
    uuid VARCHAR(50) NOT NULL,
    auth_token VARCHAR(255) NOT NULL UNIQUE, -- Garantir unicidade do token
    grupo_id VARCHAR(255) DEFAULT NULL, -- Permitir NULL caso o grupo não seja obrigatório
    fullName VARCHAR(150) COLLATE utf8mb4_general_ci DEFAULT NULL, -- Permitir NULL
    email VARCHAR(200) COLLATE utf8mb4_general_ci DEFAULT NULL, -- Permitir NULL
    pessoa_id INT DEFAULT NULL,
    client_id INT DEFAULT NULL,
    owner_pessoa_id INT DEFAULT NULL,
    remoteOS VARCHAR(50) DEFAULT NULL,
    remoteIP VARCHAR(16) DEFAULT NULL,
    pcName VARCHAR(50) DEFAULT NULL,
    APPVersion INT DEFAULT NULL,
    timelogon INT DEFAULT NULL,
    expirylogon INT DEFAULT NULL,
    blockedsession INT DEFAULT 0, -- Inicializar com 0 para evitar NULL
    UNIQUE (auth_token), -- Garantir unicidade do token
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE -- Garantir integridade referencial
);

CREATE TABLE permissions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL
);

CREATE TABLE user_permissions (
    user_id INT NOT NULL,
    permission_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (permission_id) REFERENCES permissions(id),
    PRIMARY KEY (user_id, permission_id)
);

INSERT INTO permissions (name, description) VALUES
('read_system_info', 'Permite leitura de informações do sistema'),
('edit_system_info', 'Permite edição de informações do sistema'),
('remove_system_info', 'Permite remoção de informações do sistema'),
('read_calendar', 'Permite leitura do calendário'),
('edit_calendar', 'Permite edição do calendário'),
('remove_calendar', 'Permite remoção do calendário'),
('read_chat', 'Permite leitura de mensagens no chat corporativo'),
('edit_chat', 'Permite edição de mensagens no chat corporativo'),
('remove_chat', 'Permite remoção de mensagens no chat corporativo'),
('read_people_management', 'Permite leitura de informações de gestão de pessoas'),
('edit_people_management', 'Permite edição de informações de gestão de pessoas'),
('remove_people_management', 'Permite remoção de informações de gestão de pessoas'),
('read_marketing_management', 'Permite leitura de informações de gestão de marketing'),
('edit_marketing_management', 'Permite edição de informações de gestão de marketing'),
('remove_marketing_management', 'Permite remoção de informações de gestão de marketing'),
('read_profile', 'Permite leitura do perfil'),
('edit_profile', 'Permite edição do perfil'),
('remove_profile', 'Permite remoção do perfil'),
('read_office_management', 'Permite leitura de informações de gestão de escritório'),
('edit_office_management', 'Permite edição de informações de gestão de escritório'),
('remove_office_management', 'Permite remoção de informações de gestão de escritório'),
('read_firewall_management', 'Permite leitura de informações de ferramentas de escritório'),
('edit_firewall_management', 'Permite edição de informações de ferramentas de escritório'),
('remove_firewall_management', 'Permite remoção de informações de ferramentas de escritório'),
('read_tools_management', 'Permite leitura de informações de ferramentas de escritório'),
('edit_tools_management', 'Permite edição de informações de ferramentas de escritório');

ALTER TABLE users ADD COLUMN fullname VARCHAR(255) NOT NULL AFTER username;

ALTER TABLE users ADD COLUMN email VARCHAR(255) NOT NULL AFTER fullname;

ALTER TABLE users ADD COLUMN grupo_id INT AFTER email;
